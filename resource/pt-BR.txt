A linguagem de programação Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Rust
Uma linguagem empoderando todos  a construir softwares confiáveis e eficientes.
Comece Agora
Versão 1.75.0
Por que Rust?
Desempenho
Rust é extremamente rápido e gerencia memória eficientemente: sem runtime ou garbage collector, podendo potencializar a performance de serviços críticos, rodar em sistemas embarcados, e facilmente integrar-se a outras linguagens.
Confiabilidade
O rico sistema de tipos de Rust e seu modelo de ownership garantem segurança de memória e segurança de concorrência — e permite que você elimine muitas categorias de erros durante a compilação.
Produtividade
Rust possui uma ótima documentação, um compilador amigável com mensagens de erros úteis, e ferramental de primeira qualidade — uma ferramenta integrada de compilação e gerenciamento de pacotes, suporte inteligente para múltiplos editores com autocompleção e inspeções de tipos, um formatador automático, e muito mais.
Construa com Rust
Em 2018, a comunidade de Rust decidiu melhorar a experiência de programar em alguns domínios distintos (veja o planejamento para 2018). Para estes, você pode encontrar várias crates de alta qualidade e alguns guias para lhe ajudar a começar.
Linha de Comando
Monte uma ferramenta de linha de comando rapidamente com o ecossistema robusto de Rust.
Rust te ajuda a manter sua aplicação com confiança e a distribuí-la com facilidade.
Construindo Ferramentas
WebAssembly
Use Rust para tornar seu JavaScript mais poderoso, um modulo por vez.
Publique no npm, empacote com webpack, e você está pronto.
Escrevendo Aplicações Web
Redes
Desempenho previsível. Pouco uso de recursos. Alta confiabilidade.
Rust é ótimo para serviços de rede.
Trabalhando em Servidores
Embarcados
Planejando usar aparelhos com poucos recursos?
Precisa de controle baixo nível sem desistir de conveniências de alto nível?
Rust tem a solução.
Começando com Embarcados
Rust em produção
Centenas de empresas ao redor do mundo já estão usando Rust em produção para criar solução multiplataforma rápidas e eficientes. Software que você conhece e ama, como Firefox, Dropbox, e Cloudflare usam Rust. De startups a grandes corporações, de sistemas embarcados a serviços web escaláveis, Rust é uma ótima escolha.
Meu maior elogio à Rust é que ela é entediante, e isso é um elogio incrível.
– Chris Dickinson, Engenheiro na npm, Inc
Toda a documentação, ferramentas e comunidade são ótimas - você possui todas as ferramentas para escrever código Rust com sucesso.
– Antonio Verardi, Engenheiro de Infraestrutura
Aprenda mais
Participe
Leia Rust
Adoramos documentação! Dê uma olhada nos livros disponíveis online, e também nas nossas principais publicações no blog e guias de usuários.
Leia o livro
Assista Rust
A Comunidade Rust possui um canal no YouTube dedicado a colecionar uma vasta quantidade de apresentações e tutoriais.
Assista os Vídeos
Contribua código
Rust realmente é um esforço comunitário, e nós aceitamos contribuições vindas de amadores a profissionais, e de iniciantes a especialistas. Nos ajude a tornar a experiência com Rust ainda melhor!
Leia o Guia de Contribuição
Agradecimentos
Rust não existiria sem as generosas contribuições de tempo, trabalho e recursos de pessoas e empresas. Somos muito gratos pelo apoio!
Pessoas
Rust é um projeto da comunidade e é muito grato pelas muitas contribuições que recebe.
Veja os colaboradores individuais
Patrocinadores corporativos
O projeto Rust recebe apoio de empresas através da doação de infraestrutura.
Veja os patrocinadores
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Instale Rust - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Instale Rust
Usando rustup (Recomendado)
Aparentemente você está rodando macOS, Linux, ou outro sistema similar ao Unix. Para fazer o download do Rustup e instalar Rust, execute o seguinte comando no seu terminal, e siga as instruções que surgirem na tela.
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
Parece que você está rodando Windows. Para começar a usar Rust, baixe o instalador, em seguida rode o programa e siga as instruções na tela. Você pode precisar instalar o Visual Studio C++ Build tools se solicitado durante o processo de instalação. Se você não está no Windows, veja "Outros Métodos de Instalação".
Baixar rustup-init.exe (32-bit)
Baixar rustup-init.exe (64-bit)
Windows Subsystem for Linux
Se você for um usuário do Windows Subsystem for Linux (WSL) execute o seguinte comando no terminal, e siga as instruções na tela para a instalação de Rust.
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
Rust funciona em Windows, Linux, macOS, FreeBSD e NetBSD. Se você estiver em alguma dessas plataformas e estiver vendo essa mensagem, então reporte um problema com as seguintes informações:
navigator.platform:
MacIntel
navigator.appVersion:
5.0 (Macintosh)
Reporte um problema
Para instalar Rust, se você estiver rodando Unix,  execute o seguinte no seu terminal, e siga as instruções que surgirem na tela.
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
Se você estiver rodando Windows, baixe e execute rustup‑init.exe, e então siga as instruções que surgirem na tela.
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
Se você estiver rodando Windows,  faça o download e execute rustup‑init.exe, e então siga as instruções que aparecem na tela.
Notas sobre a instalação de Rust
Iniciando
Caso você esteja apenas começando com Rust
e gostaria de um tutorial mais detalhado, confira
nossa página sobre como começar.
Considerações para Windows
No Windows, Rust requer adicionalmente as ferramentas de compilação
de C++ para o Visual Studio 2013 ou superior. A maneira mais fácil de conseguir
essas ferramentas é instalando  o pacote
Microsoft Visual C++ Build Tools 2019
que provê apenas as ferramentas de compilação de Visual C++.
Alternativamente, você pode instalar
o Visual Studio 2019, Visual Studio 2017, Visual Studio 2015, or Visual
Studio 2013 and e durante a instalação incluir a opção de “Ferramentas para C++.”
Para mais informações sobre como configurar Rust no Windows consulte a
documentação específica sobre Windows do rustup.
Gerenciamento de ferramentas com rustup
Rust é instalado e gerenciado pela ferramenta
rustup.
Rust possui um rápido processo
de lançamentos a cada 6 semanas
e suporta
um grande número de plataformas,
o que faz com que sempre existam uma grande quantidade de
binários.
rustup gerencia esses binários consistentemente
em todas as plataformas suportadas por Rust, permitindo a instalação
do Rust desde a versão beta ou nightly até mesmo suporte adiciona de componentes para cross-compilação.
Se você já instalou rustup no passado, você pode atualizar a instalação
executando rustup update.
Para mais informações confira a documentação do
rustup.
Configurando a variável de ambiente PATH
No ambiente de desenvolvimento para Rust, todas as ferramentas são
instaladas na pasta
~/.cargo/bin
%USERPROFILE%\.cargo\bin
, onde você encontra todo o conjunto de ferramentas
de Rust, incluindo rustc, cargo,e rustup.
Normalmente é comum para quem desenvolve Rust incluir esse diretório
na
variável de ambiente PATH.
Durante a instalação do rustup, será feito uma tentativa de configurar a variável PATH.
Por causa da diferença entre plataformas, terminais, e problemas no
rustup, as mudanças feitas na variável PATH
podem não ser aplicadas até que o console seja reiniciado, o usuário do sistema entre novamente,
ou até mesmo nunca.
Se após a instalação a execução de rustc --version for reportado um erro, há uma grande chance de que a configuração não foi aplicada.
Desinstalar Rust
Se a qualquer momento você desejar desinstalar Rust, você pode rodar
rustup self uninstall.
Porém, vamos sentir sua falta!
Outros métodos de instalação
A instalação descrita acima, através
do rustup, é a maneira preferida de instalação
de muitas pessoas que desenvolvem Rust. Entretanto, Rust pode ser instalado
por outros meios também.
Aprenda mais
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Aprenda Rust - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Aprenda Rust
Comece com Rust
Afetivamente apelidado "o livro", A Linguagem de Programação Rust apresenta uma visão geral da linguagem a partir de princípios fundamentais. Você construirá alguns projetos ao longo do caminho, e no final, terá uma entendimento sólido da linguagem.
Leia o Livro!
Alternativamente, Rustlings te guiará através do processo de download e configuração do conjunto de ferramentas de Rust, e te ensinará o básico para ler e escrever a sintaxe de Rust, pela linha de comando. É uma alternativa ao Rust por Exemplos que é executado no seu próprio ambiente de desenvolvimento.
Faça o curso Rustlings!
Se ler centenas de páginas sobre uma linguagem não for o seu estilo, então o Rust por Exemplo tem a solução. Enquanto o livro fala sobre código usando muitas palavras, o RPE trás muitas linhas de código e limita o texto ao mínimo. Também inclui exercícios!
Veja o livro Rust por Exemplos!
Cresça com Rust
Leia a documentação principal
Toda a documentação também está disponível localmente usando o comando rustup doc, que irá apresentar todos esses recursos no seu navegador sem precisar de acesso a internet.
A biblioteca padrão
Guia completo para a API da biblioteca padrão de Rust
Guia da Edição
Guia para as Edições de Rust
O livro sobre Cargo
Um livro sobre o gerenciamento de pacotes e o sistema de compilação do Rust.
O livro sobre rustdoc
Aprenda como criar documentações fantásticas para sua biblioteca (crate).
O livro sobre rustc
Se familiarize com os ajustes disponíveis no compilador de Rust.
Índice de Erros de Compilação
Explicações aprofundadas sobre os erros que o compilador de Rust poderá lhe informar.
Construa suas habilidades em um domínio de aplicações
Livro sobre Linha de Comando
Aprenda como construir aplicações de linha de comando efetivas usando Rust
Livro sobre WebAssembly
Use Rust para criar bibliotecas nativas para navegadores através de WebAssembly.
Livro sobre Sistemas Embarcados
Se torne proficiente com Rust para microcontroladores e outros sistemas embarcados.
Domine Rust
Curioso sobre as partes mais obscuras da linguagem? Aqui você poderá se aprofundar nos mínimos detalhes:
A Referência não é uma especificação formal, mas é mais detalhada e compreensiva que o Livro.
Leia a referência
O Rustnomicon é o seu guia para a arte secreta para usar unsafe em Rust. Algumas vezes também é chamado de "o nomicon".
Leia o 'nomicon
O Livro Instável é a documentação para funcionalidades instáveis que podem ser usadas apenas no Rust nightly.
Leia o Livro Instável (The Unstable book)
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Ferramentas - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Ferramentas
Suporte de primeira classe em editores
Independente se você prefere trabalhar com código a partir
da linha de comando, ou usando um editor gráfico, existe uma
extensão Rust disponível para o editor da sua escolha. Ou você pode criar
a sua própria usando rust-analyzer.
VS Code
Sublime Text
RustRover
Eclipse
Vim
Emacs
Visual Studio
Traga tranquilidade para a compilação
Cargo é uma ferramenta de automação de compilação para Rust.
Ela agrega todas as ações comuns em um único comando. Nenhum boilerplate é necessário.
Instale
Com dezena de milhares de pacotes, é bem provável que você encontre no crates.io a solução que você procura. Suba nos ombros de gigantes, e mova sua equipe da repetição para a inovação.
Teste
Traga confiança para seu código através das excelentes ferramentas de testes disponíveis em Rust. cargo test é a solução unificada para testar. Escreva testes próximos ao seu código, ou em arquivos separados: a solução para todas suas necessidades para testes.
Implante
cargo build cria binários enxutos para todas as plataformas. Com apenas um comando seu código estará disponível para Windows, Linux, macOS, e na web. Tudo isso com uma interface moderna, sem requerer arquivos de configurações sob medidas.
Velocidade através de automação
As ferramentas de qualidade industrial permitem a colaboração sem medo, deixando equipes focarem nas tarefas que realmente importam.
Rustfmt
Rustfmt formata automaticamente o código Rust, tornando-o mais fácil ler, escrever e manter. E o mais importante: nunca mais será necessário debater sobre espaçamento ou posições de chaves.
Vá para o repositório
Clippy
"Parece que você está escrevendo um Iterator."O Clippy ajuda pessoas com qualquer nível de experiência a escrever códigos idiomáticos, e garantir padrões.
Vá para o repositório
Cargo Doc
A ferramenta de documentação do Cargo garante
que nenhuma API fique sem documentação. Ela está
disponível localmente através do comando
cargo doc, e online para crates
públicas através de docs.rs.
Vá para o website
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Governança - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Governança
Como Rust é construído pela sua comunidade
Planejamento e processo de RFC
Cada uma das maiores decisões em Rust começa com um Pedido por Comentários (RFC em inglês).
Todas as pessoas são convidadas a discutir a proposta, para trabalhar em direção a um entendimento compartilhado sobre as vantagens e desvantagens.
Mesmo sendo árduo algumas vezes, a deliberação da comunidade é o molho secreto para a qualidade do projeto Rust.
Aprenda mais
Equipes
Leadership council
Charged with the success of the Rust Project as whole, consisting of representatives from top-level teams
Membros & Contatos
Time do compilador
detalhes internos do compilador, otimizações
Membros & Contatos
Time Crates.io
Gerenciamento de operações, desenvolvimento e políticas do crates.io.
Membros & Contatos
Time de ferramentas de desenvolvimento
Ferramentas para quem desenvolve em Rust
Membros & Contatos
Time de infraestrutura
Infraestrutura de apoio ao projeto Rust: CI, lançamentos, bots e métricas
Membros & Contatos
Time da linguagem
fazendo a concepção de novos recursos da linguagem
Membros & Contatos
Time de bibliotecas
a biblioteca padrão Rust, crates rust-lang, convenções e suporte ao ecossistema
Membros & Contatos
Time de moderação
ajudando a defender o código de conduta
Membros & Contatos
Grupos de Trabalho
Async working group
Pursuing core language and library support for async-await
Membros & Contatos
Grupo de trabalho sobre interfaces de linha de comando (CLI)
Focando na experiência de ponta a ponta ao escrever aplicações CLI, grandes ou pequenas, em Rust.
Membros & Contatos
Grupo de trabalho sobre dispositivos embarcados
Focando na experiência de ponta a ponta de usar Rust em ambientes com recursos limitados e em plataformas não tradicionais.
Membros & Contatos
Grupo de trabalho de Desenvolvimento de Jogos
Focado em tornar Rust a opção padrão para desenvolvimento de jogos.
Membros & Contatos
Rust by Example working group
Maintaining and updating the official Rust by Example book
Membros & Contatos
Grupo de trabalho de Código Seguro
Tornando mais fácil escrever código seguro em Rust
Membros & Contatos
Grupo de trabalho para Gerenciamento de Incidentes de Segurança
Fazendo a triagem e respondendo a relatórios de vulnerabilidades recebidos
Membros & Contatos
Grupo de trabalho de Triagem
Fazendo a triagem nos repositórios sob a organização rust-lang no GitHub
Membros & Contatos
Grupo de trabalho WebAssembly (WASM)
Focando na experiência de ponta a ponta em embarcar código Rust em bibliotecas e aplicações JS através do WebAssembly.
Membros & Contatos
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Comunidade - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Comunidade
Onde conversar
Fórum de usuários
O Fórum de Usuários de Rust é um lugar para todos conversarem sobre tudo
que for relacionado a Rust. Faça perguntas, coordene ideias de projetos, o que
você quiser!
Visite o Fórum
Fórum Interno
O Fórum Interno de Rust é um lugar para discutir sobre o próprio desenvolvimento
de Rust – desde o trabalho no compilador até o design da linguagem
e a biblioteca padrão.
Visite o Fórum
Plataformas de comunicação
As conversas sobre desenvolvimento de Rust e outros assuntos gerais acontecem em diversas plataformas de comunicação. Confira os diversos canais no servidor sobre Rust no Discord, ou confira na página de Equipes onde cada uma das equipes se encontram.
Discord
Zulip
Conheça mais sobre as equipes
Visite o Fórum
Visite o Fórum
Discord
Zulip
Conheça mais sobre as equipes
Onde aprender
Leia sobre Rust
A linguagem de programação Rust possui muitas qualidades, mas a sua
maior força está na comunidade de pessoas que se unem para deixar
a experiência de trabalhar com Rust enriquecedora.
Se mantenha atualizado com a comunidade Rust!
Essa Semana em Rust
Entre em contato
Nós gostaríamos de ouvir você! Não sabe onde ou para quem fazer perguntas? Quer participar mas não sabe como?
A Equipe de Comunidade esta disposta a te conectar com quem pode ajudar!
email community@rust-lang.org
Essa Semana em Rust
email community@rust-lang.org
Eventos
Descubra um encontro local ou conferências
Existem mais de 90 encontros locais e conferências diversas em mais de 35 países.
Rustaceans se encontram periodicamente em Encontros de Grupos Usuários. Essa é uma ótima introdução a comunidade, e um ótimo jeito de aprender e socializar com outras pessoas de interesses similares. Encontros locais geralmente são informais e aberto a todas as pessoas.
Vejo o Calendário
Confira as apresentações da conferência de 2020
Faça seu próprio evento
Com o crescimento de Rust, estamos empolgados em ajudar as pessoas a começarem seus próprios eventos locais. Desde encontros locais a conferências, a Equipe de Eventos está pronta pra lhe ajudar.
Registrar seu evento nos ajuda a rastrear os esforços da nossa comunidade e nos permite lhe conectar com palestrantes ou outros membros da sua região.
Confira o repositório da Equipe de Eventos
Registre o seu evento
Rustbridge
RustBridge é uma oficina focada em ajudar pessoas pouco representadas na área de tecnologia com experiência em outras linguagens a aprender Rust e se juntar a comunidade.
Confira o repositório do Rustbridge
Padrões da Comunidade
Nós estamos comprometidos a proporcionar um ambiente amigável, seguro e acolhedor a todos, independentemente de gênero, orientação sexual, incapacitação, etnia, religião, qualquer outra característica pessoal. Nosso código de conduta determina os padrões de comportamento em todos os fóruns oficiais de Rust.
Se você tem sido ou está sendo incomodado ou posto em uma posição desconfortável por um membro da comunidade, contate algum dos membros da Equipe de Moderação de Rust imediatamente. Mesmo que você seja um contribuidor frequente ou novato, nós nos preocupamos em fazer a comunidade um lugar seguro para você.
Mande uma mensagem para a Equipe de Moderação
leia o código de conduta
leia o guia de moderação
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Iniciando - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Iniciando
Configure rapidamente seu ambiente de desenvolvimento Rust e escreva uma pequena aplicação!
Instalando Rust
Você pode experimentar Rust online pelo Rust Playground sem instalar nada no seu computador.
Teste Rust sem instalar
Rustup: o instalador e gerenciador de versões de Rust
A principal maneira usada para instalar Rust é através da ferramenta chamada Rustup, que é um instalador e um gerenciador de versões.
Aparentemente você está rodando macOS, Linux, ou outro sistema similar ao Unix. Para fazer o download do Rustup e instalar Rust, execute o seguinte comando no seu terminal, e siga as instruções que surgirem na tela.
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
Parece que você está rodando Windows. Para começar a usar Rust, baixe o instalador, em seguida rode o programa e siga as instruções na tela. Você pode precisar instalar o Visual Studio C++ Build tools se solicitado durante o processo de instalação. Se você não está no Windows, veja "Outros Métodos de Instalação".
Baixar rustup-init.exe (32-bit)
Baixar rustup-init.exe (64-bit)
Windows Subsystem for Linux
Se você for um usuário do Windows Subsystem for Linux (WSL) execute o seguinte comando no terminal, e siga as instruções na tela para a instalação de Rust.
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
Rust funciona em Windows, Linux, macOS, FreeBSD e NetBSD. Se você estiver em alguma dessas plataformas e estiver vendo essa mensagem, então reporte um problema com as seguintes informações:
navigator.platform:
MacIntel
navigator.appVersion:
5.0 (Macintosh)
Reporte um problema
Para instalar Rust, se você estiver rodando Unix,  execute o seguinte no seu terminal, e siga as instruções que surgirem na tela.
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
Se você estiver rodando Windows, baixe e execute rustup‑init.exe, e então siga as instruções que surgirem na tela.
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
Se você estiver rodando Windows,  faça o download e execute rustup‑init.exe, e então siga as instruções que aparecem na tela.
O Rust está atualizado?
Rust é atualizado com bastante frequência. Se você instalou o Rustup há algum tempo, é possível que sua versão do Rust esteja desatualizada. Baixe a última versão do Rust rodando rustup update.
Leia mais sobre instalação
Cargo: a ferramenta de compilação e gerenciamento de pacotes
Quando Rustup estiver instalado, você também terá a última versão estável da ferramenta de compilação e gerenciamento de pacotes, também conhecida como Cargo. Cargo faz várias tarefas:
compile seu projeto com cargo build
execute seu projeto com cargo run
teste seu projeto com cargo test
gere a documentação do seu projeto com cargo doc
publique sua biblioteca em crates.io com cargo publish
Para verificar que Rust e Cargo estão instalados no seu computador, abra o seu terminal favorito e digite:
cargo --version
Leia o livro sobre cargo
Outras ferramentas
Suporte a Rust está disponível em vários editores:
VS Code
Sublime Text
RustRover
Eclipse
Vim
Emacs
Visual Studio
Criando um novo projeto
Vamos escrever uma pequena aplicação como o nosso novo ambiente de desenvolvimento em Rust. Para começar, usaremos o Cargo para criar um projeto. No seu terminal, execute:
cargo new hello-rust
Isso criara um novo diretório chamado hello-rust com os seguintes arquivos:
hello-rust
|- Cargo.toml
|- src
|- main.rs
Cargo.toml é o manifesto de um projeto Rust. Aqui você encontra todos os metadados do projeto, assim como as declarações de dependência.
src/main.rs é onde nos vamos escrever nossa aplicação.
cargo new gera um projeto "Hello, world!" para você! Você pode executar esse programa entrando no diretório recém criado e executando o seguinte no seu terminal:
cargo run
Você deveria ver a seguinte saída no terminal:
$ cargo run
Compiling hello-rust v0.1.0 (/Users/ag_dubs/rust/hello-rust)
Finished dev [unoptimized + debuginfo] target(s) in 1.34s
Running `target/debug/hello-rust`
Hello, world!
Adicionando dependências
Vamos adicionar uma dependência na nossa aplicação. Você pode encontrar todo tipo de bibliotecas em crates.io, o registro de pacotes para projetos Rust. Nós geralmente chamamos bibliotecas de “crates”.
Nesse projeto vamos usar uma crate chamada ferris-says.
Em nosso arquivo Cargo.toml vamos adicionar a seguinte informação (que pegamos na página da crate):
[dependencies]
ferris-says = "0.3.1"
Agora podemos rodar:
cargo build
...e Cargo irá instalar a dependência pra nós.
Você verá que ao rodar esse comando um novo arquivo chamado Cargo.lock foi criado. Esse arquivo contém uma lista com as versões exatas de todas as dependências usadas localmente.
Para usar essa dependência, podemos abrir o arquivo main.rs, remover tudo que está no arquivo (era só mais um exemplo), e adicionar a seguinte linha:
use ferris_says::say;
Essa linha significa que podemos usar a função say que a crate ferris-says exporta.
Uma pequena aplicação em Rust
Agora vamos escrever uma pequena aplicação com a nossa nova dependência. No nosso arquivo main.rs, adicione o seguinte código:
use ferris_says::say; // from the previous step
use std::io::{stdout, BufWriter};
fn main() {
let stdout = stdout();
let message = String::from("Hello fellow Rustaceans!");
let width = message.chars().count();
let mut writer = BufWriter::new(stdout.lock());
say(&message, width, &mut writer).unwrap();
}
Após salvar, podemos executar nossa aplicação com o seguinte comando:
cargo run
Assumindo que tudo deu certo, você deveria ver a seguinte saída na sua tela:
__________________________
< Hello fellow Rustaceans! >
--------------------------
\
\
_~^~^~_
\) /  o o  \ (/
'_   -   _'
/ '-----' \
Aprenda mais!
Agora você é um(a) Rustáceo! Seja bem vindo(a)! Estamos muito felizes de ter você aqui. Quando estiver pronto(a), confira nossa página sobre Aprendizagem, onde você encontrará vários livros para seguir com sua jornada sobre Rust.
aprenda mais!
Quem é esse caranguejo, Ferris?
Ferris é a mascote não oficial da comunidade Rust. Muitas pessoas que programam Rust se consideram Rustáceos (“Rustaceans”), uma piadinha com a palavra “crustáceos.” Em inglês, nos referimos a Ferris usando pronomes neutros ao invés de usar pronomes com gênero.
Ferris é um nome que brinca com o adjetivo ferroso (“ferrous”) que significa "do ferro ou que contém ferro". Como Rust (ferrugem, em Português) surge em ferro, isso pareceu ser uma origem divertida para o nome da mascote!
Você pode achar mais imagens da mascote Ferris no site rustacean.net.
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Aplicações de linha de comando - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Aplicações de linha de comando
Por que Rust?
Sólido e rápido
Mesmo se você estiver escrevendo pequenos scripts
de uso único, você pode ter a confiança que será rápido, fácil de testar,
e com mensagens úteis.
Garantias do Rust
Fácil distribuição
Compile tudo para um único binário—seus usuários
não precisam instalar um runtime ou bibliotecas extras.
Como distribuir código em Rust
Configuração robusta
Manipule arquivos de configuração entre de plataformas com facilidade. Rust cuidará dos namespaces e formatos para você.
Comece a configurar
Manuais? pronto.
Gere manuais para sua aplicação automaticamente.
Apenas empacote os arquivos gerados e está pronto.
Aprenda como
Dados entram, dados saem
Além de conversar com humanos, Rust tem
ótimas ferramentas para lhe ajudar a falar com máquinas.
Comunique-se com máquinas
Registro flexível
É fácil adicionar registros de saída (logs), e ainda mais
fácil de configurar diferentes saídas e estilos
Registre, rastreie, compreenda
Uma base de código sustentável
Capture erros agora
E se o arquivo de configuração estiver faltando ou corrompido?
E se o valor de uma variável de ambiente específica estiver vazia?
Esses são casos fáceis de esquecer. Mas graças a forma com que erros são tratados
e ao design de suas bibliotecas, Rust irá te apontar essas situações de "E se?" antes mesmo
de rodar o seu programa.
Tratamento de erros em Rust
Estenda facilmente depois
Rust permite que você organize se código de maneira flexível. comece
com apenas um arquivo e, quando você precisar de mais funcionalidade,
refatore sua aplicação com confiança de que nada irá quebrar.
Refatoração em Rust
Comece agora!
Escrever uma aplicação de linha de comando é uma ótima maneira de aprender Rust.
Definas suas entradas
use clap::Parser;
/// Read some lines of a file
#[derive(Debug, Parser)]
struct Cli {
/// Input file to read
file: String,
/// Number of lines to read
#[structopt(short = 'n')]
num: usize,
}
Crie suas ferramentas
use std::{error::Error, fs::read_to_string};
fn main() -> Result<(), Box> {
let args = Cli::parse();
read_to_string(&args.file)?
.lines()
.take(args.num)
.for_each(|line| println!("{}", line));
Ok(())
}
Aprenda mais com o livro sobre aplicações de linha de comando
Uso em produção
Um dos motivos de ter gostado de Rust é o ecossistema entorno do crates.io. [...]
Já existe uma ótima infraestrutura para criar aplicações de linha de comando incríveis.
– Armin Ronacher,
Rust na Sentry – PolyConf 2017
Não tenho nenhum arrependimento em viver com essa base de código. [...]
Isso fui como um bônus adicional para mim: Usar Rust para criar apps para a linha de comando. É fantástico poder compilar as ferramentas para diversos sistemas.
– Fletcher Nichol,
Levando Rust para Produção – RustFest Kyiv
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
WebAssembly - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Web­Assembly
Por que Rust?
Desempenho previsível
Sem pausas imprevisíveis pelo Garbage Collector. Sem quedas de performance causadas pelo compilador JIT. Apenas controle de baixo nível acompanhado de ergonomia de alto nível.
Código pequeno
Código pequeno significa páginas carregando mais rápidamente. wasm gerado por Rust não inclui nada extra, como um garbage collector. Otimizações avançadas e técnica de tree shaking para remoção de código não usado.
Amenidades modernas
Um ecossistema ativo de bibliotecas para te ajudar a começar seus projetos rapidamente. Expressivo, abstrações de custo zero. E uma comunidade acolhedora para te ajudar a aprender.
Comece agora!
Aprenda mais sobre a máquina virtual rápida, segura e aberta, chamada WebAssembly, e leia as suas normas.
Aprenda mais
Aprenda a criar, depurar, perfilar e implantar aplicações WebAssembly usando Rust!
Leia O Livro
Aprenda mais sobre WebAssembly na Rede de Desenvolvimento da Mozilla (MDN).
Confira
Funciona bem com JavaScript
Melhore, não substitua
O sonho do WebAssembly não é acabar com o JavaScript, mas sim trabalhar junto para ajudar a lidar com tarefas de processamento pesado ou de baixo nível — tarefas que se beneficiam do foco de Rust em performance.
Funciona com conjunto de ferramentas familiares
Publique pacotes de Rust WebAssembly em registros de pacotes como npm. Integre com o webpack, Parcel, e outros. Mantenha seus pacote com ferramentas como npm audit e Greenkeeper.
Interoperabilidade homogênea
Gere automaticamente integração entre Rust, WebAssembly, e JavaScript. Aproveite de bibliotecas como web-sys que provê integrações pré-empacotadas para toda a plataforma web.
Uso em produção
Você pode compilar Rust para WASM, e chamar o código a partir de funções Serverless amarradas as fundações da Internet. Isso é incrível e mal posso esperar para trabalhar mais nisso.
– Steven Pack, Serverless Rust with Cloudflare Workers
A implementação em JavaScript [da biblioteca de source-map] acumulou muito código complicado em nome de performance, e nos trocamos isso por código idiomático em Rust. Rust não nos força escolher entre expressar claramente nossas intenções e performance durante execução.
– Nick Fitzgerald, Oxidizing Source Maps with Rust and WebAssembly
As propriedades [do Rust] torna fácil embarcar o codec DivANS em uma página web com WASM, como mostramos acima.
– Daniel Reiter Horn e Jongmin Baek, Building Better Compression Together with DivANS
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Redes - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Redes
Por que Rust?
Pouco consumo de recursos
Controle o uso de recursos para manter o uso de memória e CPU no mínimo.
Tenha a ajuda do compilador para ter certeza que está tudo certo.
E faça isso com um ecossistema produtivo e agradável de usar.
Seguro e confiável
O verificador de tipos de Rust previne toda uma categoria de erros.
Garanta exatamente quando e onde o estado é compartilhado e modificado.
Receba ajuda para encontrar pontos de falha — antes mesmo de executar em produção.
Concorrência em escala
Use qualquer mistura de estratégias de concorrência que funcione para você.
Rust garantirá que você não compartilhou o estado acidentalmente entre threads e tarefas.
Isso permite alcançar o máximo de performance, sem medo.
Comece agora!
Rust possui um ecossistema em expansão de bibliotecas fáceis de usar para a web. Aqui estão apenas dois exemplos:
Faça POST com JSON
// This will POST a body of
//     `{"lang": "rust", "body": "json"}`
#[derive(Serialize)]
struct Body<'a> {
lang: &'a str,
body: &'a str,
}
let client = reqwest::Client::new();
let res = client.post("http://httpbin.org/post")
.json(&Body {
lang: "rust",
body: "json",
})
.send()?;
Aprenda mais sobre reqwest
Receba POST com JSON
#[derive(Deserialize)]
struct Task { name: String, completed: bool }
#[post("/", data = "<task>")]
fn new(task: Json<Task>) -> Flash<Redirect> {
if task.name.is_empty() {
Flash::error(Redirect::to("/"),
"Cannot be empty.")
} else {
Flash::success(Redirect::to("/"),
"Task added.")
}
}
Aprenda mais sobre Rocket
Uso em produção
Migrar nossa infraestrutura de conexão Push para Rust nos proveu uma base de código  fácil de manter focada em corretude, ainda possuindo uma performance fantástica. Nós agora estamos processando até 20 milhões de conexões websocket ao mesmo tempo nos nossos servidores Rust em horários de pico.
– Benjamin Bangert, Staff Engineer, Mozilla
Rust é fundacional para a estratégia de evolução do projeto Linkerd. Seu sistema de tipo nos permite construir unidades modulares, testáveis e reusáveis sem sacrificar performance durante a execução.
O que é mais surpreendente, na verdade, é como o sistema de verificação de lifetime/borrow nos ajuda a evitar grandes tipos de vazamento de recursos. Depois de 2 anos, não consigo imaginar usar qualquer outra linguagem para esse trabalho.
– Oliver Gould, CTO, Buoyant
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Sistemas embarcados - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Sistemas embarcados
Por que Rust?
Analise estática poderosa
Garanta a configuração de pinos e periféricos durante o tempo de compilação. Garanta que recursos não serão usados de maneira não intencional por partes da sua aplicação.
Aprenda mais
Memória flexível
Alocação dinâmica de memória é opcional. Use um alocador global e estruturas de dados dinâmicas. Ou evite o heap e aloque tudo estaticamente.
Aprenda mais
Concorrência sem medo
Rust torna impossível compartilhar estado acidentalmente entre threads. Use o método de concorrência que preferir, e você manterá as fortes garantias de Rust.
Aprenda mais
Interoperabilidade
Integre Rust em sua base de código atual em C, ou aproveite SDKs existentes para escrever suas aplicações em Rust
Aprenda mais
Portabilidade
Escreva bibliotecas ou drivers uma vez, e use-os em diversos sistemas, desde pequenos microcontroladores até poderosos SBCs.
Aprenda mais
Conduzido pela Comunidade
Como parte do projeto Rust de código aberto, o suporte para sistemas embarcados é movido por uma das melhores comunidades abertas, com suporte de parceiros comerciais.
Aprenda mais
Mostra
"Eu estava tão empolgado quando conheci Rust, da Mozilla. Rust é uma linguagem de programação nova, com o lema de 'seguro, rápido, concorrente – escolha três'. O projeto também tem um futuro garantido, com uma comunidade de usuários poderosa e dedicada."
– Jonathan Pallant, Consultor Senior, Cambridge Consultants
Veja mais
Securing the future, with Rust de Cambridge Consultants em Vimeo.
Comece agora!
O livro Discovery
Aprenda desenvolvimento embarcado do zero usando Rust!
Leia
O livro sobre Embarcados em Rust
Já familiarizado com desenvolvimento de Embarcados: Comece agora com Rust e comece a colher os benefícios.
Leia
O livro Embedonomicon
Aprenda como funciona as bibliotecas fundacionais para sistemas embarcados.
Leia
Mais documentação
Uso em produção
Na Sensirion nós recentemente usamos Rust para criar um demonstrador embarcado para o Sensor de Material Particulado da Sensirion. Por causa da fácil compilação cruzada e da disponibilidade de muitos crates de ótima qualidade no crates.io nós rapidamente chegamos a um demostrador rápido e robusto.
– Raphael Nestler, Engenheiro Software, Sensirion
Nós na Airborne Engineering Ltd. usamos Rust recentemente para escrever nosso bootloader Ethernet, blethrs, para nosso sistema interno de aquisição de dados. Rust é uma linguagem promissora e estamos animados para usá-la em futuros projetos, embarcados ou não.
– Dr. Adam Greig, Engenheiro de Instrumentatação, Airborne Engineering Ltd.
[Rust] nos permite entregar software mais rápido e mais correto do que imaginávamos ser possível. Graças a Rust, podemos tratar segurança de memória como uma garantia, enquanto outros benefícios de uma linguagem com custo zero de abstrações e um sofisticado sistema de tipos, nos ajudam a desenvolver software sustentavelmente. Rust deixa nossos clientes felizes, e nossos engenheiros também.
– Marc Brinkmann, CEO, 49nord
Nós realmente achamos incrível que possamos usar uma boa linguagem moderna no ambiente dos sistemas embarcados, onde geralmente não existem alternativas para C/C++
– Aleksei Arbuzov, Engenheiro de Software Senior, Terminal Technologies
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Produção - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Produção
Publicações técnicas
npm
Leia como o npm, que mantém o Registro de Pacotes JavaScript do mesmo nome, descobriu a simplicidade de rodar Rust em produção.
Leia a publicação técnica
Tilde
Aprenda como Rust ajuda Tilde, criadores da Skylight, a usar o mínimo de recurso para proporcionar monitoramento performático com muitas funcionalidades para as aplicações de seus clientes.
Leia a publicação técnica
Destaques
Dropbox
Vários componentes do sistema principal de armazenamento de arquivo da Dropbox foram escritos em Rust como um dos passos de um grande projeto de otimização na eficiência de datacenters. Atualmente o sistema é usado por todo o armazenamento da Dropbox, servindo mais de 500 milhões de usuários.
Leia Mais
Yelp
Yelp desenvolveu um framework em Rust para teste A/B em tempo real. O sistema é usado em todo os sites e aplicativos da Yelp, e os experimentos vão desde testes de UX até a infraestrutura interna. Rust foi escolhido por ser tão rápido quanto C (barato de rodar) e mais seguro que C (barato de manter).
Assista o Vídeo
Sua empresa usa Rust? Considere compartilhar sua experiência conosco!
Contate o Leadership Council
Quer saber quem mais tem usado Rust em produção?
Confira a página de usuários
Veja como empresas estão usando ferramentas em específicos domínios de desenvolvimento!
Linha de Comando
Aprenda mais
WebAssembly
Aprenda mais
Redes
Aprenda mais
Embarcados
Aprenda mais
Apoiando Rust
Interessando em patrocinar o trabalho em Rust? Uma conferência sobre Rust? Adoraríamos saber mais.
Fale com o Leadership Council
Licença
Rust é comumente licenciado sob duas licenças, a Licença Apache v2.0 e a Licença MIT, sendo adequado para qualquer tipo de projeto.
Políticas: Licenças
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Produção - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Produção
Publicações técnicas
npm
Leia como o npm, que mantém o Registro de Pacotes JavaScript do mesmo nome, descobriu a simplicidade de rodar Rust em produção.
Leia a publicação técnica
Tilde
Aprenda como Rust ajuda Tilde, criadores da Skylight, a usar o mínimo de recurso para proporcionar monitoramento performático com muitas funcionalidades para as aplicações de seus clientes.
Leia a publicação técnica
Destaques
Dropbox
Vários componentes do sistema principal de armazenamento de arquivo da Dropbox foram escritos em Rust como um dos passos de um grande projeto de otimização na eficiência de datacenters. Atualmente o sistema é usado por todo o armazenamento da Dropbox, servindo mais de 500 milhões de usuários.
Leia Mais
Yelp
Yelp desenvolveu um framework em Rust para teste A/B em tempo real. O sistema é usado em todo os sites e aplicativos da Yelp, e os experimentos vão desde testes de UX até a infraestrutura interna. Rust foi escolhido por ser tão rápido quanto C (barato de rodar) e mais seguro que C (barato de manter).
Assista o Vídeo
Sua empresa usa Rust? Considere compartilhar sua experiência conosco!
Contate o Leadership Council
Quer saber quem mais tem usado Rust em produção?
Confira a página de usuários
Veja como empresas estão usando ferramentas em específicos domínios de desenvolvimento!
Linha de Comando
Aprenda mais
WebAssembly
Aprenda mais
Redes
Aprenda mais
Embarcados
Aprenda mais
Apoiando Rust
Interessando em patrocinar o trabalho em Rust? Uma conferência sobre Rust? Adoraríamos saber mais.
Fale com o Leadership Council
Licença
Rust é comumente licenciado sob duas licenças, a Licença Apache v2.0 e a Licença MIT, sendo adequado para qualquer tipo de projeto.
Políticas: Licenças
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Aprenda Rust - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Aprenda Rust
Comece com Rust
Afetivamente apelidado "o livro", A Linguagem de Programação Rust apresenta uma visão geral da linguagem a partir de princípios fundamentais. Você construirá alguns projetos ao longo do caminho, e no final, terá uma entendimento sólido da linguagem.
Leia o Livro!
Alternativamente, Rustlings te guiará através do processo de download e configuração do conjunto de ferramentas de Rust, e te ensinará o básico para ler e escrever a sintaxe de Rust, pela linha de comando. É uma alternativa ao Rust por Exemplos que é executado no seu próprio ambiente de desenvolvimento.
Faça o curso Rustlings!
Se ler centenas de páginas sobre uma linguagem não for o seu estilo, então o Rust por Exemplo tem a solução. Enquanto o livro fala sobre código usando muitas palavras, o RPE trás muitas linhas de código e limita o texto ao mínimo. Também inclui exercícios!
Veja o livro Rust por Exemplos!
Cresça com Rust
Leia a documentação principal
Toda a documentação também está disponível localmente usando o comando rustup doc, que irá apresentar todos esses recursos no seu navegador sem precisar de acesso a internet.
A biblioteca padrão
Guia completo para a API da biblioteca padrão de Rust
Guia da Edição
Guia para as Edições de Rust
O livro sobre Cargo
Um livro sobre o gerenciamento de pacotes e o sistema de compilação do Rust.
O livro sobre rustdoc
Aprenda como criar documentações fantásticas para sua biblioteca (crate).
O livro sobre rustc
Se familiarize com os ajustes disponíveis no compilador de Rust.
Índice de Erros de Compilação
Explicações aprofundadas sobre os erros que o compilador de Rust poderá lhe informar.
Construa suas habilidades em um domínio de aplicações
Livro sobre Linha de Comando
Aprenda como construir aplicações de linha de comando efetivas usando Rust
Livro sobre WebAssembly
Use Rust para criar bibliotecas nativas para navegadores através de WebAssembly.
Livro sobre Sistemas Embarcados
Se torne proficiente com Rust para microcontroladores e outros sistemas embarcados.
Domine Rust
Curioso sobre as partes mais obscuras da linguagem? Aqui você poderá se aprofundar nos mínimos detalhes:
A Referência não é uma especificação formal, mas é mais detalhada e compreensiva que o Livro.
Leia a referência
O Rustnomicon é o seu guia para a arte secreta para usar unsafe em Rust. Algumas vezes também é chamado de "o nomicon".
Leia o 'nomicon
O Livro Instável é a documentação para funcionalidades instáveis que podem ser usadas apenas no Rust nightly.
Leia o Livro Instável (The Unstable book)
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Código de Conduta - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Código de Conduta
Essa política pode ser traduzida por membros da comunidade de Rust. Se houver qualquer conflito entre a versão em Inglês e a tradução, a versão em Inglês prevalecerá.
Conduta
Essa página é traduzida pela comunidade, e a tradução é mantida na base do melhor esforço. Se refira ao documento original para saber os termos oficiais que serão garantidos.
Estamos empenhados a prover um ambiente amigável, seguro e receptivo a todos, independentemente do nível de experiência, identidade e expressão de gênero, orientação sexual, incapacitação, aparência, porte físico, raça, etnia, idade, religião, nacionalidade, ou qualquer outra característica similar.
Por favor evite usar pseudônimos sexuais explicitamente ou outros apelidos que possam desviar de um ambiente amigável, seguro e receptivo para todos.
Por favor seja gentil e cortez, Não há necessidade de ser maldoso e rude.
Respeite e compreenda que algumas pessoas têm opiniões diferentes e que cada design ou escolha de implementação trás uma troca e vários custos. Raramente há uma resposta correta.
Por favor, evite críticas não estruturadas. Se você tem uma ideia concreta do que quer experimentar, faça um fork e veja se funciona.
Nós excluiremos você de toda interação se você insultar, humilhar ou assediar qualquer pessoa. Este não é um comportamento aceitável. Nós interpretamos o termo "assédio" da forma citada no Código de Conduta do Cidadão; se você tem alguma dúvida sobre o que está incluso nesse conceito, por favor leia a definição. Em particular, nós não toleramos nenhum comportamento que exclua pessoas de grupos socialmente marginalizados.
Assédio privado também é inaceitável. Não importa quem você seja, se você sentir que foi ou está sendo assediado, ou posto em situação desconfortável por qualquer membro da comunidade, por favor entre em contato com algum operador de canal de comunicação ou qualquer um dos         Time de Moderação Rust
imediatamente. Mesmo que você seja um contribuidor regular ou um recém-chegado, nós nos preocupamos em tornar a essa comunidade em um lugar seguro para você. Nós te daremos suporte.
Da mesma forma, qualquer forma de spam, troll, flame, bait ou qualquer outro comportamento de desvio a atenção não é bem vindo.
Entre em contato com a Equipe de Moderação Rust
Moderação
Essa página é traduzida pela comunidade, e a tradução é mantida na base do melhor esforço. Se refira ao documento original para saber os termos oficiais que serão garantidos.
Essas são as políticas de sustentação dos padrões de conduta da nossa comunidade. Se você sentir que uma discussão precisa de moderação, por favor entre em contato com a Time de Moderação Rust.
Observações que violam os padrões de conduta Rust, incluindo observações de ódio, nocivas, opressivas, ou exclusórias, não são permitidas. (Xingar é permitido, desde que nunca direcionado a outro usuário, e nunca de forma odiosa.)
Observações que moderadores considerem inapropriadas, listadas no código de conduta ou não, são também não permitidas.
Moderadores vão inicialmente reagir a tais observações com um aviso.
Se o aviso for ignorado, o usuário será "kickado", isto é, será removido do canal de comunicação para se acalmar.
Se o usuário voltar e continuar a causar encrencas, ele será banido, isto é, excluído definitivamente.
Moderadores podem escolher ao seu critério por desbanir um usuário se esta foi a primeira ocorrência e o mesmo tenha genuinamente pedido desculpas para a parte ofendida.
Se um moderador baniu alguém e você acha que foi um ato injustificado, por favor converse com o mesmo ou com outro moderador, em privado. Reclamações sobre banimentos nos canais públicos de comunicação não são permitidas.
Os moderadores são colocados em um patamar mais alto do que outros membros da comunidade. Se um moderador criar uma situação inapropriada, deve-se esperar menos tolerância.
Na comunidade Rust nós nos esforçamos para fazer mais uns pelos outros. Não tente ser tecnicamente incontestável, tente ser o melhor de si próprio. Em particular, evite flertar com problemas ofensivos ou sensíveis, especialmente se estiverem fora do assunto da discussão. Essas atitudes podem causar brigas desnecessárias, sentimentos feridos e abalo na confiança. Ou ainda pior, elas podem afastar as pessoas completamente da comunidade.
E se alguém tiver problemas com algo que você disse ou fez, resista à vontade de se defender. Apenas pare de fazer o que está incomodando e se desculpe. Mesmo que você se sinta mal interpretado ou injustamente acusado, provavelmente havia uma forma melhor de se expressar. Lembre-se que é sua responsabilidade fazer seus colegas Rustaceans se sentirem confortáveis. Todos nós queremos se relacionar e estamos aqui primeiramente e principalmente porque queremos conversar sobre tecnologias interessantes. Você notará que as pessoas sempre tentarão ver boas intenções e te perdoarão com mais facilidade conforme você ganhar a confiança delas.
As políticas listadas acima se aplicam a todos os ambientes oficiais Rust, incluindo: os canais Discord (https://discord.gg/rust-lang); repositórios no GitHub dentro de rust-lang, rust-lang-nursery, and rust-lang-deprecated; e todos os fóruns dentro de rust-lang.org (users.rust-lang.org, internals.rust-lang.org). Para outros projetos que adotam o Código de Conduta Rust, por favor entre em contato com os mantenedores sobre a aplicação. Se você deseja usar esse código de conduta no seu próprio projeto, considere mencionar explicitamente a sua política de moderação ou fazer uma cópia contendo essa informações para evitar qualquer engano.
Adaptado de Node.js Policy on Trolling assim como de Contributor Covenant v1.3.0.
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Licenças - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Licenças
Essa política pode ser traduzida por membros da comunidade de Rust. Se houver qualquer conflito entre a versão em Inglês e a tradução, a versão em Inglês prevalecerá.
Licença
Essa página é traduzida pela comunidade, e a tradução é mantida na base do melhor esforço. Se refira ao documento original para saber os termos oficiais que serão garantidos.
A linguagem de programação Rust e todos os outros projetos oficiais, incluindo esse website, geralmente possuem duas licenças:
Licença Apache, Versão 2.0
Licença MIT
As informação de licenciamento de cada projeto podem ser encontradas nos seus respectivos repositórios no GitHub.
Logos de terceiros podem estar sujeitas a termos de uso dos terceiros, e não estão disponíveis sob a mesma licença que o resto do website.
Caso você tenha uma dúvida ou preocupação específica sobre como o projeto Rust ou qualquer um dos projetos associados estão licenciados, contate o Rust Leadership Council.
Contate o Leadership Council
Atribuição
Ícones feitos por Freepik de www.flaticon.com, licenciados sob CC-3.0-BY
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Política de segurança - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Política de segurança
Essa política pode ser traduzida por membros da comunidade de Rust. Se houver qualquer conflito entre a versão em Inglês e a tradução, a versão em Inglês prevalecerá.
Denunciando
email security@rust-lang.org
Safety is one of the core principles of Rust, and to that end, we would like to ensure that Rust has a secure implementation. Thank you for taking the time to responsibly disclose any issues you find.
All security bugs in the Rust distribution should be reported by email to security@rust-lang.org. This list is delivered to a small security team. Your email will be acknowledged within 24 hours, and you’ll receive a more detailed response to your email within 48 hours indicating the next steps in handling your report. If you would like, you can encrypt your report using our public key. This key is also On MIT’s keyserver and reproduced below.
This email address receives a large amount of spam, so be sure to use a descriptive subject line to avoid having your report be missed. After the initial reply to your report, the security team will endeavor to keep you informed of the progress being made towards a fix and full announcement. As recommended by RFPolicy, these updates will be sent at least every five days. In reality, this is more likely to be every 24-48 hours.
If you have not received a reply to your email within 48 hours, or have not heard from the security team for the past five days, there are a few steps you can take (in order):
Contact both the security coordinators directly:
Josh Stone
Pietro Albini
Post on the internals forums
Please note that the discussion forums are public areas. When escalating in these venues, please do not discuss your issue. Simply say that you’re trying to get a hold of someone from the security team.
email security@rust-lang.org
Política de divulgação de vulnerabilidades
O projeto Rust possui um programa de divulgação em 5 passos.
O relatório de segurança é recebido e um contato primário é designado. Essa pessoa coordenará a correção e o processo de divulgação.
O problema é confirmado e é determinada uma lista de todas as versões afetadas.
O código é auditado para encontrar qualquer problema similar em potencial.
Correções são preparadas para todas as distribuições ainda sob manutenção. Essas correções não são publicadas nos repositórios publicos, mas mantidas pendentes localmente até o anúncio publico.
Na data de embargo, a lista de emails sobre segurança Rust  recebe uma cópia do anúncio. As mudanças são publicadas no repositório público e novos binários são publicados no site rust-lang.org.  Dentro de 6 horas da notificação na lista de emails, uma copia de orientação será publicada no blog do Rust.
Esse processo pode demorar um pouco, especialmente quando é necessário a coordenação com pessoas responsáveis de outros projetos. Será dado todo esforço para tratar dessas falhas no melhor tempo possível, entretanto é importante seguir o processo de distribuição acima para garantir que a divulgação seja lidada de maneira consistente.
Recebendo atualizações de segurança
A melhora maneira de receber todos os anúncios de segurança é se inscrever na Lista de anúncios de segurança de Rust  (alternativamente enviando um email para rustlang-security-announcements+subscribe@googlegroups.com). A lista de email é de pouco volume, e notificações são enviadas apenas quando o embargo é encerrado.
Nos anunciaremos vulnerabilidades 72 horas antes do fim do embargo para distros@openwall, para que distribuições Linux possam atualizar seus pacotes.
Chave PGP em texto puro
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1
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
u05l
=SPB7
-----END PGP PUBLIC KEY BLOCK-----
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
Políticas - Linguagem de Programação Rust
Rust
Instale
Aprenda
Playground
Ferramentas
Governança
Comunidade
Blog
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Políticas
Essa página apresenta uma lista completa das políticas do projeto Rust.
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Divulgação de Vulnerabilidades
Notificação de privacidade
Não encontrou o que estava procurando? Tem alguma pergunta? Entre em contato!
Fale com o Rust Leadership Council
Busque ajuda!
Documentação
Rust Forge (Documentação para contribuidores)
Faça uma Pergunta no Fórum de Usuários
Linguagem
English (en-US)
Español (es)
Français (fr)
Italiano (it)
日本語 (ja)
Português (pt-BR)
Русский (ru)
Türkçe (tr)
简体中文 (zh-CN)
正體中文 (zh-TW)
Termos e políticas
Código de Conduta
Licenças
Política de uso de Logo e Guia de Mídias
Denuncia de Vulnerabilidades
Notificação de privacidade
Todas as políticas
Social
Mantido pela Equipe Rust. Encontrou algum erro?
Envie uma correção aqui!
Procurando pelo site antigo?
